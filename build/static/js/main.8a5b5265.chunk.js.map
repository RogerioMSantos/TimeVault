{"version":3,"sources":["components/CreateVault.js","components/VaultList.js","components/VaultDetails.js","App.js","reportWebVitals.js","index.js"],"names":["CreateVault","provider","signer","onSelectVault","useState","unlockTime","setUnlockTime","goalAmount","setGoalAmount","targetWallet","setTargetWallet","alternativeWallet","setAlternativeWallet","description","setDescription","vaultAddress","setVaultAddress","errors","setErrors","validateForm","newErrors","Date","getTime","now","isNaN","parseFloat","ethers","utils","isAddress","Object","keys","length","createVault","a","factory","Contract","factoryAddress","VaultFactory","abi","Math","floor","parseUnits","tx","wait","alert","message","viewVault","error","className","style","maxWidth","width","type","value","onChange","e","target","placeholder","onClick","VaultList","account","vaults","setVaults","useEffect","fetchVaults","getVaults","userVaults","console","on","owner","toLowerCase","removeAllListeners","maxHeight","map","vault","index","formatEther","toLocaleString","VaultDetails","setVault","amount","setAmount","isValidAmount","setIsValidAmount","fetchVaultDetails","vaultContract","TimeVault","goalMet","totalDeposited","isWithdrawn","details","handleDeposit","handleGoalStatusUpdated","handleWithdraw","off","deposit","data","withdraw","formatUnits","disabled","isValid","validateAmount","App","setProvider","setSigner","setAccount","accountName","setAccountName","selectedVault","setSelectedVault","init","window","ethereum","request","method","web3Provider","providers","Web3Provider","getSigner","listAccounts","accounts","log","getNetwork","network","isLocalNetwork","chainId","isMainnet","lookupAddress","ensName","newAccounts","location","reload","removeListener","slice","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8a5b5265.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { ethers } from \"ethers\";\r\nimport VaultFactory from \"../artifacts/contracts/VaultFactory.sol/VaultFactory.json\";\r\nimport { factoryAddress } from \"../App\";\r\n\r\nconst CreateVault = ({ provider, signer, onSelectVault }) => {\r\n  const [unlockTime, setUnlockTime] = useState(\"\");\r\n  const [goalAmount, setGoalAmount] = useState(\"\");\r\n  const [targetWallet, setTargetWallet] = useState(\"\");\r\n  const [alternativeWallet, setAlternativeWallet] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [vaultAddress, setVaultAddress] = useState(\"\");\r\n\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const validateForm = () => {\r\n    let newErrors = {};\r\n\r\n    if (!unlockTime)\r\n      newErrors.unlockTime = \"O tempo de desbloqueio é obrigatório.\";\r\n\r\n    if (unlockTime && new Date(unlockTime).getTime() < Date.now())\r\n      newErrors.unlockTime = \"O tempo de desbloqueio deve ser no futuro.\";\r\n\r\n    if (!goalAmount || isNaN(goalAmount) || parseFloat(goalAmount) <= 0)\r\n      newErrors.goalAmount = \"A quantidade alvo deve ser um número positivo.\";\r\n\r\n    if (!ethers.utils.isAddress(targetWallet))\r\n      newErrors.targetWallet = \"Endereço da carteira alvo inválido.\";\r\n\r\n    if (!ethers.utils.isAddress(alternativeWallet))\r\n      newErrors.alternativeWallet = \"Endereço da carteira alternativa inválido.\";\r\n\r\n    if (description === \"\")\r\n      newErrors.description = \"A descrição é obrigatória.\";\r\n\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const createVault = async () => {\r\n    if (!validateForm()) return; // Bloqueia a execução se houver erros\r\n\r\n    try {\r\n      const factory = new ethers.Contract(factoryAddress, VaultFactory.abi, signer);\r\n      const tx = await factory.createVault(\r\n        Math.floor(new Date(unlockTime).getTime() / 1000),\r\n        ethers.utils.parseUnits(goalAmount, 18),\r\n        targetWallet,\r\n        alternativeWallet,\r\n        description\r\n      );\r\n\r\n      await tx.wait();\r\n      alert(\"Vault criado com sucesso!\");\r\n    } catch (error) {\r\n      alert(\"Erro ao criar Vault: \" + error.message);\r\n    }\r\n  };\r\n\r\n  const viewVault = async () => {\r\n    if (!ethers.utils.isAddress(vaultAddress)) {\r\n      setErrors({ vaultAddress: \"Endereço de Vault inválido.\" });\r\n      return;\r\n    }\r\n    try {\r\n      onSelectVault(vaultAddress);\r\n    } catch (error) {\r\n      alert(\"Erro ao buscar informações do Vault: \" + error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container d-flex flex-column align-items-center\">\r\n      <div className=\"card p-4 shadow-lg\" style={{ maxWidth: \"400px\", width: \"100%\" }}>\r\n        <h2 className=\"text-center mb-3\">Criar Novo Vault</h2>\r\n        <div className=\"d-flex flex-column gap-3\">\r\n          <input\r\n            type=\"datetime-local\"\r\n            className={`form-control ${errors.unlockTime ? \"is-invalid\" : \"\"}`}\r\n            value={unlockTime}\r\n            onChange={(e) => setUnlockTime(e.target.value)}\r\n          />\r\n          {errors.unlockTime && <div className=\"invalid-feedback\">{errors.unlockTime}</div>}\r\n\r\n          <input\r\n            type=\"number\"\r\n            className={`form-control ${errors.goalAmount ? \"is-invalid\" : \"\"}`}\r\n            placeholder=\"Quantidade Alvo\"\r\n            value={goalAmount}\r\n            onChange={(e) => setGoalAmount(e.target.value)}\r\n          />\r\n          {errors.goalAmount && <div className=\"invalid-feedback\">{errors.goalAmount}</div>}\r\n\r\n          <input\r\n            type=\"text\"\r\n            className={`form-control ${errors.description ? \"is-invalid\" : \"\"}`}\r\n            placeholder=\"Descrição\"\r\n            value={description}\r\n            onChange={(e) => setDescription(e.target.value)}\r\n          />\r\n          {errors.description && <div className=\"invalid-feedback\">{errors.description}</div>}\r\n\r\n          <input\r\n            type=\"text\"\r\n            className={`form-control ${errors.targetWallet ? \"is-invalid\" : \"\"}`}\r\n            placeholder=\"Carteira Alvo\"\r\n            value={targetWallet}\r\n            onChange={(e) => setTargetWallet(e.target.value)}\r\n          />\r\n          {errors.targetWallet && <div className=\"invalid-feedback\">{errors.targetWallet}</div>}\r\n\r\n          <input\r\n            type=\"text\"\r\n            className={`form-control ${errors.alternativeWallet ? \"is-invalid\" : \"\"}`}\r\n            placeholder=\"Carteira Alternativa\"\r\n            value={alternativeWallet}\r\n            onChange={(e) => setAlternativeWallet(e.target.value)}\r\n          />\r\n          {errors.alternativeWallet && <div className=\"invalid-feedback\">{errors.alternativeWallet}</div>}\r\n\r\n          <button className=\"btn btn-primary w-100\" onClick={createVault}>Criar Vault</button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mt-4 card p-4 shadow-lg\" style={{ maxWidth: \"400px\", width: \"100%\" }}>\r\n        <h2 className=\"text-center mb-3\">Ver Vault</h2>\r\n        <input\r\n          type=\"text\"\r\n          className={`form-control ${errors.vaultAddress ? \"is-invalid\" : \"\"}`}\r\n          placeholder=\"Endereço do Vault\"\r\n          value={vaultAddress}\r\n          onChange={(e) => setVaultAddress(e.target.value)}\r\n        />\r\n        {errors.vaultAddress && <div className=\"invalid-feedback\">{errors.vaultAddress}</div>}\r\n\r\n        <button className=\"btn btn-secondary w-100 mt-2\" onClick={viewVault}>Ver Vault</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateVault;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { ethers } from \"ethers\";\r\nimport VaultFactory from \"../artifacts/contracts/VaultFactory.sol/VaultFactory.json\";\r\nimport { factoryAddress } from \"../App\";\r\n\r\nconst VaultList = ({ provider, account, onSelectVault }) => {\r\n  const [vaults, setVaults] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchVaults = async () => {\r\n      try {\r\n        const factory = new ethers.Contract(factoryAddress, VaultFactory.abi, provider);\r\n        const userVaults = await factory.getVaults(account);\r\n        setVaults(userVaults);\r\n      } catch (error) {\r\n        console.error(\"Erro ao buscar vaults:\", error);\r\n      }\r\n    };\r\n\r\n    if (provider && account) {\r\n      fetchVaults();\r\n\r\n      const factory = new ethers.Contract(factoryAddress, VaultFactory.abi, provider);\r\n      factory.on(\"VaultCreated\", (owner, vaultAddress) => {\r\n        if (owner.toLowerCase() === account.toLowerCase()) {\r\n          // console.log(`Novo Vault criado: ${vaultAddress}`);\r\n          fetchVaults(); // Atualiza a interface ao detectar um novo vault\r\n        }\r\n      });\r\n\r\n      return () => {\r\n        factory.removeAllListeners(\"VaultCreated\");\r\n      };\r\n    }\r\n  }, [account, provider]);\r\n\r\n  return (\r\n    <div className=\"container\" style={{ maxWidth: \"400px\" }}>\r\n      <div className=\"card shadow-lg\">\r\n        <div className=\"card-header bg-primary text-white text-center\">\r\n          <h4>Meus Vaults</h4>\r\n        </div>\r\n        <div className=\"card-body\">\r\n          {vaults.length > 0 ? (\r\n            <div className=\"list-group overflow-auto\" style={{ maxHeight: \"580px\" }}>\r\n              {vaults.map((vault, index) => (\r\n                <button\r\n                  key={index}\r\n                  className=\"list-group-item list-group-item-action d-flex flex-column\"\r\n                  onClick={() => onSelectVault(vault.vaultAddress)}\r\n                >\r\n                  <p className=\"mb-1\"><strong>Descrição:</strong> {vault.description}</p>\r\n                  <p className=\"mb-1\"><strong>Meta:</strong> {ethers.utils.formatEther(vault.goalAmount)} ETH</p>\r\n                  <p className=\"mb-1\"><strong>Desbloqueio:</strong> {new Date(vault.unlockTime * 1000).toLocaleString()}</p>\r\n                </button>\r\n              ))}\r\n            </div>\r\n          ) : (\r\n            <p className=\"text-muted text-center\">Nenhum vault encontrado.</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VaultList;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { ethers } from \"ethers\";\r\nimport TimeVault from \"../artifacts/contracts/TimeVault.sol/TimeVault.json\";\r\n\r\nconst VaultDetails = ({ provider, signer, vaultAddress }) => {\r\n  const [vault, setVault] = useState(null);\r\n  const [amount, setAmount] = useState(\"\");\r\n  const [isValidAmount, setIsValidAmount] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchVaultDetails = async () => {\r\n      try {\r\n        const vaultContract = new ethers.Contract(vaultAddress, TimeVault.abi, provider);\r\n        const details = {\r\n          owner: await vaultContract.owner(),\r\n          unlockTime: await vaultContract.unlockTime(),\r\n          goalAmount: await vaultContract.goalAmount(),\r\n          targetWallet: await vaultContract.targetWallet(),\r\n          alternativeWallet: await vaultContract.alternativeWallet(),\r\n          description: await vaultContract.description(),\r\n          goalMet: await vaultContract.goalMet(),\r\n          totalDeposited: await vaultContract.totalDeposited(),\r\n          isWithdrawn: await vaultContract.isWithdrawn(),\r\n        };\r\n        setVault(details);\r\n      } catch (error) {\r\n        console.error(\"Erro ao buscar detalhes do vault:\", error);\r\n      }\r\n    };\r\n\r\n    if (vaultAddress && provider) {\r\n      fetchVaultDetails();\r\n\r\n      const vaultContract = new ethers.Contract(vaultAddress, TimeVault.abi, provider);\r\n\r\n      const handleDeposit = () => fetchVaultDetails();\r\n      const handleGoalStatusUpdated = () => fetchVaultDetails();\r\n      const handleWithdraw = () => {\r\n        fetchVaultDetails();\r\n      };\r\n\r\n      vaultContract.on(\"Deposited\", handleDeposit);\r\n      vaultContract.on(\"GoalStatusUpdated\", handleGoalStatusUpdated);\r\n      vaultContract.on(\"Withdrawn\", handleWithdraw);\r\n\r\n      return () => {\r\n        vaultContract.off(\"Deposited\", handleDeposit);\r\n        vaultContract.off(\"GoalStatusUpdated\", handleGoalStatusUpdated);\r\n        vaultContract.off(\"Withdrawn\", handleWithdraw);\r\n      };\r\n    }\r\n  }, [vaultAddress, provider]);\r\n\r\n  const validateAmount = (value) => {\r\n    const isValid = !isNaN(value) && parseFloat(value) > 0;\r\n    setIsValidAmount(isValid);\r\n  };\r\n\r\n  const handleAmountChange = (e) => {\r\n    const value = e.target.value;\r\n    setAmount(value);\r\n    validateAmount(value);\r\n  };\r\n\r\n  const deposit = async () => {\r\n    if (!isValidAmount) return;\r\n\r\n    try {\r\n      const vaultContract = new ethers.Contract(vaultAddress, TimeVault.abi, signer);\r\n      const tx = await vaultContract.deposit({\r\n        value: ethers.utils.parseUnits(amount, \"ether\"),\r\n      });\r\n      await tx.wait();\r\n      alert(\"Depósito realizado com sucesso!\");\r\n    } catch (error) {\r\n      console.error(\"Erro ao depositar:\", error);\r\n      alert(\"Erro ao depositar: \" + (error.data?.message || \"Erro desconhecido\"));\r\n    }\r\n  };\r\n\r\n  const withdraw = async () => {\r\n    try {\r\n      const vaultContract = new ethers.Contract(vaultAddress, TimeVault.abi, signer);\r\n      const tx = await vaultContract.withdraw();\r\n      await tx.wait();\r\n      alert(\"Saque realizado com sucesso!\");\r\n    } catch (error) {\r\n      console.error(\"Erro ao sacar:\", error);\r\n      alert(\"Erro ao sacar: \" + (error.data?.message || \"Erro desconhecido\"));\r\n    }\r\n  };\r\n\r\n  if (!vault) return <div className=\"text-center mt-4\">Carregando detalhes do vault...</div>;\r\n\r\n  return (\r\n    <div className=\"container mb-4\" style={{ maxWidth: \"500px\" }}>\r\n      <div className=\"card shadow-lg\">\r\n        <div className={`card-header text-center ${vault.isWithdrawn ? \"bg-danger\" : \"bg-success\"} text-white`}>\r\n          <h4>{vault.isWithdrawn ? \"Vault Indisponível - Saque Realizado\" : \"Vault Habilitado\"}</h4>\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <ul className=\"list-group list-group-flush\">\r\n            <li className=\"list-group-item\"><strong>Endereço do Vault:</strong> {vaultAddress}</li>\r\n            <li className=\"list-group-item\"><strong>Proprietário:</strong> {vault.owner}</li>\r\n            <li className=\"list-group-item\"><strong>Tempo de Desbloqueio:</strong> {new Date(vault.unlockTime * 1000).toLocaleString()}</li>\r\n            <li className=\"list-group-item\"><strong>Quantidade Alvo:</strong> {ethers.utils.formatUnits(vault.goalAmount, 18)} ETH</li>\r\n            <li className=\"list-group-item\"><strong>Descrição:</strong> {vault.description}</li>\r\n            <li className=\"list-group-item\"><strong>Carteira Alvo:</strong> {vault.targetWallet}</li>\r\n            <li className=\"list-group-item\"><strong>Carteira Alternativa:</strong> {vault.alternativeWallet}</li>\r\n            <li className=\"list-group-item\"><strong>Meta Alcançada:</strong> {vault.goalMet ? \"Sim ✅\" : \"Não ❌\"}</li>\r\n            <li className=\"list-group-item\"><strong>Total Depositado:</strong> {ethers.utils.formatUnits(vault.totalDeposited, 18)} ETH</li>\r\n          </ul>\r\n\r\n          <div className=\"mt-4\">\r\n            <div className=\"input-group\">\r\n              <input\r\n                type=\"text\"\r\n                className={`form-control ${isValidAmount ? \"\" : \"is-invalid\"}`}\r\n                placeholder=\"Quantidade a depositar\"\r\n                value={amount}\r\n                disabled={vault.isWithdrawn}\r\n                onChange={handleAmountChange}\r\n              />\r\n              <button className=\"btn btn-primary\" onClick={deposit} disabled={vault.isWithdrawn || !isValidAmount}>Depositar</button>\r\n              <div className=\"invalid-feedback\">Por favor, insira um valor válido maior que zero.</div>\r\n            </div>\r\n            <button className=\"btn btn-danger mt-3 w-100\" onClick={withdraw} disabled={vault.isWithdrawn}>Sacar</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VaultDetails;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { ethers } from 'ethers';\r\nimport CreateVault from './components/CreateVault';\r\nimport VaultList from './components/VaultList';\r\nimport VaultDetails from './components/VaultDetails';\r\nimport './App.css';\r\n\r\nexport const factoryAddress = '0x5FbDB2315678afecb367f032d93F642f64180aa3';\r\n\r\nfunction App() {\r\n  const [provider, setProvider] = useState(null);\r\n  const [signer, setSigner] = useState(null);\r\n  const [account, setAccount] = useState('');\r\n  const [accountName, setAccountName] = useState('');\r\n  const [selectedVault, setSelectedVault] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const init = async () => {\r\n      if (!window.ethereum) {\r\n        alert('Por favor, instale o MetaMask ou use um navegador compatível com Ethereum.');\r\n        return;\r\n      }\r\n\r\n      try {\r\n        await window.ethereum.request({ method: 'eth_requestAccounts' });\r\n      } catch (error) {\r\n        console.error('Usuário negou a permissão para acessar a carteira.');\r\n        return;\r\n      }\r\n\r\n      const web3Provider = new ethers.providers.Web3Provider(window.ethereum);\r\n      setProvider(web3Provider);\r\n      const signer = web3Provider.getSigner();\r\n      setSigner(signer);\r\n\r\n      const accounts = await web3Provider.listAccounts();\r\n      if (!accounts[0]) {\r\n        console.log('Nenhuma conta conectada.');\r\n        return;\r\n      }\r\n      setAccount(accounts[0]);\r\n\r\n      // Verificar se a rede suporta ENS\r\n      const network = await web3Provider.getNetwork();\r\n      const isLocalNetwork = network.chainId === 31337; // 31337 é o chainId padrão do Hardhat\r\n      const isMainnet = network.chainId === 1; // 1 é o chainId da Ethereum Mainnet\r\n\r\n      if (isLocalNetwork) {\r\n        console.log('Rede local detectada. ENS desabilitado.');\r\n        setAccountName('Usuário');\r\n      } else if (isMainnet) {\r\n        // Tentar resolver o nome ENS apenas na Mainnet\r\n        try {\r\n          const ensName = await web3Provider.lookupAddress(accounts[0]);\r\n          setAccountName(ensName || 'Usuário');\r\n        } catch (error) {\r\n          console.error('Erro ao resolver nome ENS:', error);\r\n          setAccountName('Usuário');\r\n        }\r\n      } else {\r\n        console.log('ENS não é suportado nesta rede.');\r\n        setAccountName('Usuário');\r\n      }\r\n\r\n      // Listener para mudança de conta\r\n      window.ethereum.on('accountsChanged', (newAccounts) => {\r\n        setAccount(newAccounts[0] || '');\r\n        setAccountName('Usuário');\r\n      });\r\n\r\n      // Listener para mudança de rede\r\n      window.ethereum.on('chainChanged', () => {\r\n        window.location.reload();\r\n      });\r\n    };\r\n\r\n    init();\r\n\r\n    return () => {\r\n      if (window.ethereum) {\r\n        window.ethereum.removeListener('accountsChanged', () => { });\r\n        window.ethereum.removeListener('chainChanged', () => { });\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container mt-4\">\r\n      {/* Informações da carteira */}\r\n      <div className=\"card p-3 mb-4 shadow-sm\">\r\n        <h5 className=\"text-center\">Carteira Conectada</h5>\r\n        <p className=\"text-center mb-1\">\r\n          <strong>Nome:</strong> {accountName}\r\n        </p>\r\n        <p className=\"text-center\">\r\n          <strong>Endereço:</strong> {account ? `${account.slice(0, 6)}...${account.slice(-4)}` : 'Desconectado'}\r\n        </p>\r\n      </div>\r\n\r\n      <div className=\"d-flex flex-wrap gap-4\">\r\n        {/* Criar Vault */}\r\n        <div className=\"flex-grow-1\">\r\n          <CreateVault provider={provider} signer={signer} onSelectVault={setSelectedVault} />\r\n        </div>\r\n\r\n        {/* Lista de Vaults */}\r\n        <div className=\"flex-grow-1\">\r\n          <VaultList provider={provider} signer={signer} account={account} onSelectVault={setSelectedVault} />\r\n        </div>\r\n\r\n        {/* Detalhes do Vault (se selecionado) */}\r\n        {selectedVault && (\r\n          <div className=\"flex-grow-1\">\r\n            <VaultDetails provider={provider} signer={signer} vaultAddress={selectedVault} />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}